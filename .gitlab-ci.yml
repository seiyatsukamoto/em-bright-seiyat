include:
  - project: computing/gitlab-ci-templates
    file:
      - python.yml

stages:
  - dist
  - test
  - lint
  - docs
  - deploy

# -- dist -------------------
#
# This job makes the ligo.em_bright-X.Y.Z.tar.gz
# distribution and uploads it as a job
# artifact
#

tarball:
  extends:
    # https://computing.docs.ligo.org/gitlab-ci-templates/python/#.python:build
    - .python:build
  stage: dist
  image: python:3

# -- test -------------------
#
# These jobs run the tests on
# all supported platforms
#

# -- test with pip

.test:
  extends:
    - .python:pytest
  stage: test
  needs:
    - tarball
  variables:
    # don't need the git repo
    # GIT_STRATEGY: none
    # be able to fetch data files from git
    GIT_STRATEGY: fetch
    # install from the tarball
    INSTALL_TARGET: "ligo_em_bright-*.tar.*"
    # the name of the module to report coverage for
    COVERAGE_TARGET: "em_bright"
    # configure pytest
    PYTEST_OPTIONS: "-ra -v --pyargs ligo.em_bright"
    TESTS_REQUIRE: "coverage<6"

  script:
    # run pytest
    - !reference [".python:pytest", script]
    # get list of entry points
    - entrypoints=$(python -c "import pkg_resources; print('\n'.join(e.name for e in pkg_resources.iter_entry_points('console_scripts') if e.dist.project_name == 'ligo.em-bright'))")
    # run --help for each of them
    - for entrypoint in ${entrypoints};
      do
      python -m coverage run
          --append
          --source=${COVERAGE_TARGET}
          $(which ${entrypoint}) --help
      ; done

test:python3.8:minimal:
  extends:
    - .test
  image: python:3.8
  needs: []
  variables:
    # install from the git repository
    GIT_STRATEGY: fetch
    INSTALL_TARGET: "."
  before_script:
    # replace the requirements as follows:
    #    >=X.Y.Z ---> X.Y.Z  (exact pin to minimum)
    #    ^X.Y    ---> ~X.Y    (pin to X.Y.*)
    - sed -i -E
          -e 's/>=/==/'
          -e 's/\^/~/'
          pyproject.toml
    # then run everything else as normal
    - !reference [".test", before_script]

test:python3.8:
  extends:
    - .test
  image: python:3.8

test:python3.9:
  extends:
    - .test
  image: python:3.9

# -- lint -------------------
#
# These jobs check the code
# for quality issues
#

flake8:
  extends:
    # https://computing.docs.ligo.org/gitlab-ci-templates/python/#.python:flake8
    - .python:flake8
  stage: lint
  needs: []

# -- docs -------------------
#
# These jobs run the sphinx
# documentation build
#

docs:
  extends:
    # https://computing.docs.ligo.org/gitlab-ci-templates/python/#.python:sphinx
    - .python:sphinx
  stage: docs
  image: python:3.9
  needs: []
  variables:
    SOURCEDIR: "doc"
  before_script:
    - pip install --upgrade pip
    - python -m pip install poetry
    - poetry export --dev --output requirements.txt --without-hashes
    - python -m pip install -r requirements.txt

pages:
  stage: deploy
  needs:
    - docs
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - mv html public
  artifacts:
    paths:
      - public
